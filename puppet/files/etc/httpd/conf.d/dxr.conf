# This is an example of serving a DXR target directory with Apache. To try it
# out, go into tests/json-test and run `make`. Files are served by Apache,
# while dynamic stuff (just search, for now) is delegated to a WSGI process.
# This should be adaptable to serve at non-root positions in the URL hierarchy.

<VirtualHost *:80>
    RewriteEngine On

    # Not strictly necessary but should save a lot of RewriteConds and fstats:
    RewriteRule ^/search$ - [L]
    RewriteRule ^$ - [L]
    RewriteRule ^/static($|/.*) - [L]
    RewriteRule ^.*/$ - [L]  # Don't muck with the front page or any directory-browing page.

    # Append ".html" to files in the tree but not to ones that exist as requested...
    RewriteCond /home/vagrant/dxr/tests/json-test/target/trees%{REQUEST_FILENAME} !-f
    # ...and not to folders:
    RewriteCond /home/vagrant/dxr/tests/json-test/target/trees%{REQUEST_FILENAME} !-d
    # Don't report a 404 on a rewritten address; that's confusing:
    RewriteCond /home/vagrant/dxr/tests/json-test/target/trees%{REQUEST_FILENAME}.html -f
    RewriteRule (.*) %{REQUEST_FILENAME}.html [L,PT]

    DirectoryIndex '.dxr-directory-index.html' index.html

    Alias /static/ /home/vagrant/dxr/dxr/static/
    AliasMatch ^((?!/search$).*$) /home/vagrant/dxr/tests/json-test/target/trees/$1

    # Tell this instance of DXR where its target folder is:
    SetEnv DXR_FOLDER /home/vagrant/dxr/tests/json-test/target/

    # On a production machine, you'd typically do `python setup.py install`
    # rather than `python setup.py develop`, so this would point inside your
    # site-packages directory.
    WSGIScriptAlias / /home/vagrant/dxr/dxr/dxr.wsgi
</VirtualHost>
