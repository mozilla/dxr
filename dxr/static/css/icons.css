/* icons */
.folder-icon {
    background: transparent url(/static/icons/folder.png) .5em 7px no-repeat;
    padding: .5em .5em .5em 30px;  /* 30px = 16px icon + 7px padding above + a little more whitespace */
}
.folder-content,
.result {
    clear: both;
}
.folder-content .icon {
    background-color: transparent;
    background-position: .5em 6px;
    background-repeat: no-repeat;
    padding: .5em .5em .5em 30px;
}
.icon-container {
    background-color: transparent;
    background-repeat: no-repeat;
    float: right;
    padding: 8px; /* Makes the container 16x16 in order to show full icon. */
}
a.reference {
    background: transparent url(/static/icons/reference.png) 4px 8px no-repeat;
    padding-left: 1.5rem;
}
a.method {
    background: transparent url(/static/icons/method.png) 4px 8px no-repeat;
    padding-left: 1.5rem;
}
a.field {
    background: transparent url(/static/icons/field.png) 2px 8px no-repeat;
    padding-left: 1.5rem;
}
a.search {
    background: transparent url(/static/icons/search.png) 4px 8px no-repeat;
    padding-left: 1.5rem;
}
a.class {
    background: transparent url(/static/icons/class.png) 4px 2px no-repeat;
    padding-left: 1.5rem;
}
/* Folder context menu */
a.goto-folder {
    background: transparent url(/static/icons/goto_folder.png) 4px 8px no-repeat;
    padding-left: 1.5rem;
}
a.path-search {
    background: transparent url(/static/icons/path_search.png) 4px 8px no-repeat;
    padding-left: 1.5rem;
}
a.exclude-path {
    background: transparent url(/static/icons/exclude_path.png) 4px 8px no-repeat;
    padding-left: 1.5rem;
}
a.diff {
    background: none; /* Do not inherit the rule for .diff below. */
}
/* MimeType Icons */
.build {
    background: transparent url(/static/icons/mimetypes/build.png) no-repeat;
    padding-left: 1.5rem;
}
/* The .c calss is used in files for comments. This definition is there just to prevent overriding.*/
.icon-container.c,
.icon.c { 
    background-image: url(/static/icons/mimetypes/c.png);
}
.conf {
    background-image: url(/static/icons/mimetypes/conf.png);
}
.cpp {
    background-image: url(/static/icons/mimetypes/cpp.png);
}
.cs {
    background-image: url(/static/icons/mimetypes/cs.png);
}
.css {
    background-image: url(/static/icons/mimetypes/css.png);
}
.diff {
    background-image: url(/static/icons/mimetypes/diff.png);
}
.h {
    background-image: url(/static/icons/mimetypes/h.png);
}
.html {
    background-image: url(/static/icons/mimetypes/html.png);
}
.iso {
    background-image: url(/static/icons/mimetypes/iso.png);
}
.java {
    background-image: url(/static/icons/mimetypes/java.png);
}
.js {
    background-image: url(/static/icons/mimetypes/js.png);
}
.mm {
    background-image: url(/static/icons/mimetypes/mm.png);
}
.page_white_code_red {
    background-image: url(/static/icons/mimetypes/page_white_code_red.png);
}
.php {
    background-image: url(/static/icons/mimetypes/php.png);
}
.py {
    background-image: url(/static/icons/mimetypes/py.png);
}
.rb {
    background-image: url(/static/icons/mimetypes/rb.png);
}
.sh {
    background-image: url(/static/icons/mimetypes/sh.png);
}
.svg {
    background-image: url(/static/icons/mimetypes/svg.png);
}
.tex {
    background-image: url(/static/icons/mimetypes/tex.png);
}
.txt {
    background-image: url(/static/icons/mimetypes/txt.png);
}
.ui {
    background-image: url(/static/icons/mimetypes/ui.png);
}
.unknown {
    background-image: url(/static/icons/mimetypes/unknown.png);
}
.vs {
    background-image: url(/static/icons/mimetypes/vs.png);
}
.xml {
    background-image: url(/static/icons/mimetypes/xml.png);
}
